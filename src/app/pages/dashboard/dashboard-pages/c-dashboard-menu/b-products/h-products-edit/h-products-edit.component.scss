

// /* Main Container Styles */
// .form-container {
//   background-color: #f9fafb;
//   padding: 1.5rem;
//   border-radius: 0.5rem;
//   max-width: 1200px;
//   margin: 0 auto;
// }

// .form-header {
//   margin-bottom: 1.5rem;
// }

// .form-title {
//   font-size: 1.5rem;
//   font-weight: 600;
//   color: #111827;
// }

// .form-content {
//   background-color: transparent;
// }

// /* Section Styles */
// .section {
//   background-color: white;
//   border-radius: 0.5rem;
//   box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
//   padding: 1.5rem;
//   margin-bottom: 1.5rem;
// }

// .section-title {
//   font-size: 1.125rem;
//   font-weight: 600;
//   color: #111827;
//   margin-bottom: 1.25rem;
//   padding-bottom: 0.75rem;
//   border-bottom: 1px solid #e5e7eb;
// }

// .section-description {
//   font-size: 0.875rem;
//   color: #6b7280;
//   margin-bottom: 1rem;
// }

// /* Form Layout */
// .product-form {
//   display: flex;
//   flex-direction: column;
//   gap: 1.5rem;
// }

// .form-row {
//   display: grid;
//   grid-template-columns: 1fr;
//   gap: 1.25rem;
// }

// @media (min-width: 768px) {
//   .form-row {
//     grid-template-columns: repeat(2, 1fr);
//   }
  
//   /* Make pricing row 3 columns */
//   .section:has(.form-row:has(p-inputNumber[formControlName="price"])) .form-row {
//     grid-template-columns: repeat(3, 1fr);
//   }
// }

// /* Form Field Styles */
// .form-field {
//   margin-bottom: 1.25rem;
// }

// .field-label {
//   display: block;
//   font-size: 0.875rem;
//   font-weight: 500;
//   color: #374151;
//   margin-bottom: 0.5rem;
// }

// .field-input {
//   width: 100%;
// }

// /* Error Handling */
// .error-container {
//   min-height: 1.25rem;
//   margin-top: 0.25rem;
// }

// .error-message {
//   color: #ef4444;
//   font-size: 0.75rem;
// }

// .helper-text {
//   color: #6b7280;
//   font-size: 0.75rem;
// }

// /* Upload Area Styles */
// .upload-area {
//   min-height: 150px;
//   border: 2px dashed #e5e7eb;
//   border-radius: 0.5rem;
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
//   padding: 1.5rem;
//   transition: all 0.2s ease;
// }

// .upload-area:hover, 
// .upload-area.has-preview {
//   border-color: var(--primary-color);
//   background-color: rgba(0, 0, 0, 0.01);
// }

// .upload-placeholder {
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
// }

// .upload-icon {
//   font-size: 2rem;
//   color: #9ca3af;
// }

// .upload-text {
//   color: #6b7280;
//   margin-top: 0.5rem;
//   text-align: center;
// }

// .upload-link {
//   color: var(--primary-color);
//   cursor: pointer;
//   font-weight: 500;
// }

// .image-preview {
//   height: 10rem;
//   width: 10rem;
//   border-radius: 0.375rem;
//   object-fit: cover;
// }

// /* Additional Images Grid */
// .additional-images-grid {
//   display: flex;
//   justify-content: center;
//   align-items: center;
//   flex-wrap: wrap;
//   gap: 1rem;
//   width: 100%;
//   // background-color: #9ca3af;
// }

// .additional-image-container {
//   position: relative;
// }

// .additional-image {
//   height: 10rem;
//   width: 10rem;
//   object-fit: cover;
//   border-radius: 0.375rem;
// }

// // .remove-image-button {
// //   position: absolute;
// //   top: 0;
// //   right: 0;
// //   transform: translate(25%, -25%);
// //   width: 1.5rem;
// //   height: 1.5rem;
// //   border-radius: 50%;
// //   display: flex;
// //   align-items: center;
// //   justify-content: center;
// //   padding: 0;
// // }

// /* Toggle Switches */
// .pricing-toggle, 
// .status-toggle {
//   display: flex;
//   align-items: center;
//   gap: 0.5rem;
//   margin-bottom: 1rem;
// }

// .toggle-label {
//   font-size: 0.875rem;
//   font-weight: 500;
//   color: #374151;
//   width: fit-content;
// }

// .status-toggles {
//   display: flex;
//   flex-wrap: wrap;
//   gap: 1.5rem;
// }

// /* Choice-Based Pricing */
// .choices-container {
//   display: flex;
//   flex-direction: column;
//   gap: 1rem;
// }

// .choice-item {
//   border: 1px solid #e5e7eb;
//   border-radius: 0.375rem;
//   padding: 1rem;
//   transition: all 0.2s ease;
// }

// .choice-item:hover {
//   border-color: var(--primary-color);
// }

// .choice-actions {
//   display: flex;
//   justify-content: space-between;
//   align-items: center;
//   margin-top: 0.5rem;
// }

.choice-status {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

// .add-choice-button {
//   align-self: flex-start;
//   margin-top: 0.5rem;
// }

// /* Form Actions */
// .form-actions {
//   display: flex;
//   justify-content: flex-end;
//   gap: 0.75rem;
//   margin-top: 1rem;
// }

// /* Submitted Data (for development) */
// .submitted-data {
//   margin-top: 2rem;
//   padding: 1rem;
//   background-color: white;
//   border-radius: 0.5rem;
//   box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
// }

// .submitted-data-title {
//   font-size: 1rem;
//   font-weight: 600;
//   margin-bottom: 0.75rem;
// }

// .submitted-data-content {
//   background-color: #f3f4f6;
//   padding: 1rem;
//   border-radius: 0.375rem;
//   overflow: auto;
//   font-size: 0.875rem;
//   max-height: 300px;
// }

// /* PrimeNG Customizations */
// ::ng-deep .p-fileupload-buttonbar {
//   display: none;
// }

// ::ng-deep .jodit-status-bar-link,
// ::ng-deep .jodit-toolbar-button_about {
//   display: none;
// }

// // /* Hide number input arrows */
// // input[type="number"]::-webkit-inner-spin-button,
// // input[type="number"]::-webkit-outer-spin-button {
// //   -webkit-appearance: none;
// //   margin: 0;
// // }

// // /* Ensure consistent input heights */
// // ::ng-deep .p-inputtext,
// // ::ng-deep .p-dropdown,
// // ::ng-deep .p-inputnumber {
// //   height: 2.5rem;
// // }

// /* Ensure consistent dropdown styling */
// ::ng-deep .p-dropdown {
//   width: 100%;
// }

// /* Ensure consistent button styling */
// ::ng-deep .p-button {
//   height: 2.5rem;
//   display: flex;
//   align-items: center;
//   justify-content: center;
// }

// /* Ensure consistent spacing in editor */
// ::ng-deep .jodit-container {
//   margin-bottom: 0;
// }

// :host {
//   display: block;
//   padding: 20px;
//   background-color: #f5f7fa;
//   font-family: 'Roboto', sans-serif;
// }

// .form-container {
//   max-width: 1200px;
//   margin: 0 auto;
//   background: #ffffff;
//   border-radius: 8px;
//   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
//   padding: 20px;
// }

// .form-header {
//   text-align: center;
//   margin-bottom: 20px;

//   .form-title {
//     font-size: 24px;
//     font-weight: 600;
//     color: #333;
//   }
// }

// .form-content {
//   padding: 0 20px;
// }

// .section {
//   margin-bottom: 30px;

//   .section-title {
//     font-size: 20px;
//     font-weight: 500;
//     color: #333;
//     margin-bottom: 15px;
//     border-bottom: 2px solid #007bff;
//     padding-bottom: 5px;
//   }

//   .section-description {
//     font-size: 14px;
//     color: #666;
//     margin-bottom: 15px;
//   }
// }

// .form-row {
//   display: flex;
//   flex-wrap: wrap;
//   gap: 20px;
//   margin-bottom: 20px;

//   @media (max-width: 768px) {
//     flex-direction: column;
//   }
// }

// .form-field {
//   flex: 1;
//   min-width: 250px;
// }

// .field-label {
//   display: block;
//   font-size: 14px;
//   font-weight: 500;
//   color: #333;
//   margin-bottom: 8px;
// }

// .uniform-input {
//   width: 100%;
//   padding: 10px;
//   border: 1px solid #d1d5db;
//   border-radius: 6px;
//   font-size: 14px;
//   color: #333;
//   background: #fff;
//   transition: all 0.2s ease;

//   &:hover {
//     border-color: #007bff;
//     box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
//   }

//   &:focus {
//     outline: none;
//     border-color: #007bff;
//     box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.2);
//   }

//   &[disabled] {
//     background: #f3f4f6;
//     cursor: not-allowed;
//   }
// }

// :host ::ng-deep {
//   .p-inputtext,
//   .p-dropdown,
//   .p-inputnumber,
//   .p-inputswitch,
//   .ngx-jodit,
//   .p-fileupload {
//     &.uniform-input {
//       width: 100%;
//       padding: 10px;
//       border: 1px solid #d1d5db;
//       border-radius: 6px;
//       font-size: 14px;
//       color: #333;
//       background: #fff;
//       transition: all 0.2s ease;

//       &:hover {
//         border-color: #007bff;
//         box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
//       }

//       &:focus {
//         outline: none;
//         border-color: #007bff;
//         box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.2);
//       }

//       &[disabled] {
//         background: #f3f4f6;
//         cursor: not-allowed;
//       }
//     }

//     .p-dropdown-panel {
//       border: 1px solid #d1d5db;
//       border-radius: 6px;
//       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
//     }

//     .p-inputnumber-input {
//       width: 100%;
//       padding: 10px;
//       border: none;
//     }
//   }
// }

// .uniform-button {
//   padding: 10px 16px;
//   font-size: 14px;
//   border-radius: 6px;
//   transition: all 0.2s ease;

//   &:hover {
//     transform: translateY(-1px);
//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
//   }

//   &.p-button-success {
//     background: #28a745;
//     border-color: #28a745;

//     &:hover {
//       background: #218838;
//       border-color: #218838;
//     }
//   }

//   &.p-button-text {
//     color: #007bff;

//     &:hover {
//       background: rgba(0, 123, 255, 0.1);
//     }
//   }

//   &.p-button-danger {
//     background: #dc3545;
//     border-color: #dc3545;

//     &:hover {
//       background: #c82333;
//       border-color: #c82333;
//     }
//   }
// }

// .error-container {
//   min-height: 20px;
//   margin-top: 5px;

//   .error-message {
//     color: #dc3545;
//     font-size: 12px;
//   }

//   .helper-text {
//     color: #666;
//     font-size: 12px;
//   }
// }

// .pricing-toggle,
// .status-toggles,
// .choice-actions {
//   display: flex;
//   align-items: center;
//   gap: 20px;
//   margin-bottom: 20px;

//   .toggle-label {
//     font-size: 14px;
//     color: #333;
//   }
// }

// .choices-container {
//   .choice-item {
//     background: #f9fafb;
//     padding: 15px;
//     border-radius: 6px;
//     margin-bottom: 15px;
//   }
// }

// .form-actions {
//   display: flex;
//   justify-content: flex-end;
//   gap: 10px;
//   margin-top: 20px;
// }

// .submitted-data {
//   margin-top: 30px;
//   padding: 20px;
//   background: #f9fafb;
//   border-radius: 6px;

//   .submitted-data-title {
//     font-size: 18px;
//     font-weight: 500;
//     color: #333;
//     margin-bottom: 10px;
//   }

//   .submitted-data-content {
//     font-size: 14px;
//     color: #333;
//     background: #fff;
//     padding: 15px;
//     border-radius: 6px;
//     border: 1px solid #d1d5db;
//   }
// }


// Main container
.form-container {
  display: flex;
  flex-direction: column;
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px;
}

// Form header
.form-header {
  margin-bottom: 24px;
  
  .form-title {
    font-size: 24px;
    font-weight: 600;
    margin: 0;
  }
}

// Form content
.form-content {
  display: flex;
  flex-direction: column;
}

// Product form
.product-form {
  display: flex;
  flex-direction: column;
  gap: 32px;
}

// Sections
.section {
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding-bottom: 24px;
  border-bottom: 1px solid #e0e0e0;
  
  .section-title {
    font-size: 18px;
    font-weight: 600;
    margin: 0;
  }
  
  .section-description {
    font-size: 14px;
    margin: -8px 0 8px 0;
  }
}

// Form rows (horizontal layout)
.form-row {
  display: flex;
  flex-wrap: wrap;
  gap: 24px;
  
  .form-field {
    flex: 1;
    min-width: 250px;
  }
}

// Form fields
.form-field {
  display: flex;
  flex-direction: column;
  margin-bottom: 16px;
  
  .field-label {
    font-weight: 500;
    margin-bottom: 8px;
  }
  
  .field-input {
    width: 100%;
  }
  
  .error-container {
    min-height: 20px;
    margin-top: 4px;
    
    .error-message {
      color: #f44336;
      font-size: 12px;
    }
    
    .helper-text {
      color: #757575;
      font-size: 12px;
    }
  }
}

// Pricing toggle
.pricing-toggle {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}

// Choices container
.choices-container {
  display: flex;
  flex-direction: column;
  gap: 24px;
  
  .choice-item {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 16px;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    
    .choice-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      
      .choice-status {
        display: flex;
        align-items: center;
        gap: 12px;
      }
    }
  }
  
  .add-choice-button {
    align-self: flex-start;
    margin-top: 8px;
  }
}

// Status toggles
.status-toggles {
  display: flex;
  flex-wrap: wrap;
  gap: 24px;
  
  .status-toggle {
    display: flex;
    align-items: center;
    gap: 12px;
  }
}

// Toggle label
.toggle-label {
  font-size: 14px;
  margin: 0;
  white-space: nowrap;
}

// Form actions
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 16px;
  margin-top: 16px;
}

// Submitted data (for development)
.submitted-data {
  margin-top: 32px;
  padding: 16px;
  border: 1px solid #e0e0e0;
  border-radius: 4px;
  
  .submitted-data-title {
    font-size: 16px;
    font-weight: 600;
    margin: 0 0 16px 0;
  }
  
  .submitted-data-content {
    white-space: pre-wrap;
    font-size: 14px;
    line-height: 1.5;
    overflow: auto;
    max-height: 400px;
  }
}

// Uniform input styles
.uniform-input {
  width: 100%;
}

// Uniform button styles
.uniform-button {
  display: flex;
  align-items: center;
  gap: 8px;
}

// Responsive adjustments
@media (max-width: 768px) {
  .form-container {
    padding: 16px;
  }
  
  .form-row {
    flex-direction: column;
    gap: 0;
  }
  
  .status-toggles {
    flex-direction: column;
    gap: 16px;
  }
  
  .form-actions {
    flex-direction: column-reverse;
    gap: 8px;
    
    button {
      width: 100%;
    }
  }
}

























// <!-- Main Container -->
// <div class="form-container">
//   <!-- Form Header -->
//   <div class="form-header">
//     <h2 class="form-title">Edit Product</h2>
//   </div>

//   <!-- Form Content -->
//   <div class="form-content">
//     <form [formGroup]="productForm" (ngSubmit)="onFormSubmit()" class="product-form">
      
//       <!-- SECTION: Basic Information -->
//       <div class="section">
//         <h3 class="section-title">Basic Information</h3>
        
//         <!-- Name Fields (2-column layout) -->
//         <div class="form-row">
//           <div class="form-field">
//             <label class="field-label">English Name *</label>
//             <input type="text" pInputText formControlName="en_name" class="field-input uniform-input" />
//             <div class="error-container">
//               @if (productForm.get('en_name')?.invalid && productForm.get('en_name')?.touched) {
//                 <small class="error-message">English Name is required.</small>
//               }
//             </div>
//           </div>
          
//           <div class="form-field">
//             <label class="field-label">Arabic Name *</label>
//             <input type="text" pInputText formControlName="ar_name" class="field-input uniform-input" dir="rtl" />
//             <div class="error-container">
//               @if (productForm.get('ar_name')?.invalid && productForm.get('ar_name')?.touched) {
//                 <small class="error-message">Arabic Name is required.</small>
//               }
//             </div>
//           </div>
//         </div>
        
//         <!-- Description Fields -->
//         <div class="form-field">
//           <label class="field-label">English Small Description *</label>
//           <ngx-jodit [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_small_description" class="uniform-input"></ngx-jodit>
//           <div class="error-container">
//             @if (productForm.get('en_small_description')?.invalid && productForm.get('en_small_description')?.touched) {
//               <small class="error-message">English Small Description is required.</small>
//             }
//           </div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic Small Description *</label>
//           <ngx-jodit [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_small_description" class="uniform-input"></ngx-jodit>
//           <div class="error-container">
//             @if (productForm.get('ar_small_description')?.invalid && productForm.get('ar_small_description')?.touched) {
//               <small class="error-message">Arabic Small Description is required.</small>
//             }
//           </div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">English Description *</label>
//           <ngx-jodit [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_description" class="uniform-input"></ngx-jodit>
//           <div class="error-container">
//             @if (productForm.get('en_description')?.invalid && productForm.get('en_description')?.touched) {
//               <small class="error-message">English Description is required.</small>
//             }
//           </div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic Description *</label>
//           <ngx-jodit dir="rtl" [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_description" class="uniform-input"></ngx-jodit>
//           <div class="error-container">
//             @if (productForm.get('ar_description')?.invalid && productForm.get('ar_description')?.touched) {
//               <small class="error-message">Arabic Description is required.</small>
//             }
//           </div>
//         </div>
        
//         <!-- Specifications Fields -->
//         <div class="form-field">
//           <label class="field-label">English Specifications</label>
//           <ngx-jodit dir="ltr" [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_specifications" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic Specifications</label>
//           <ngx-jodit dir="rtl" [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_specifications" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <!-- Ingredients Fields -->
//         <div class="form-field">
//           <label class="field-label">English Ingredients</label>
//           <ngx-jodit dir="ltr" [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_ingredient" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic Ingredients</label>
//           <ngx-jodit dir="rtl" [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_ingredient" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <!-- How to Use Fields -->
//         <div class="form-field">
//           <label class="field-label">English How to Use</label>
//           <ngx-jodit dir="ltr" [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_how_to_use" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic How to Use</label>
//           <ngx-jodit dir="rtl" [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_how_to_use" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <!-- More Information Fields -->
//         <div class="form-field">
//           <label class="field-label">English More Information</label>
//           <ngx-jodit dir="ltr" [options]="{ language: 'en', direction: 'ltr', height: 300 }" formControlName="en_more_information" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
        
//         <div class="form-field">
//           <label class="field-label">Arabic More Information</label>
//           <ngx-jodit dir="rtl" [options]="{ language: 'ar', direction: 'rtl', height: 300 }" formControlName="ar_more_information" class="uniform-input"></ngx-jodit>
//           <div class="error-container"></div>
//         </div>
//       </div>
      
//       <!-- SECTION: Category & Subcategory -->
//       <div class="section">
//         <h3 class="section-title">Category</h3>
        
//         <div class="form-row">
//           <div class="form-field">
//             <label class="field-label">Category *</label>
//             <p-dropdown 
//               [options]="categories"
//               formControlName="category_id"
//               optionLabel="en_name"
//               optionValue="id"
//               placeholder="Select Category"
//               [style]="{'width': '100%'}"
//               class="field-input uniform-input">
//             </p-dropdown>
//             <div class="error-container">
//               @if (productForm.get('category_id')?.invalid && productForm.get('category_id')?.touched) {
//                 <small class="error-message">Category is required.</small>
//               }
//             </div>
//           </div>
          
//           <div class="form-field">
//             <label class="field-label">Subcategory</label>
//             <p-dropdown 
//               [options]="subcategories"
//               formControlName="subcategory_id"
//               optionLabel="en_name"
//               optionValue="id"
//               placeholder="Select Subcategory"
//               [style]="{'width': '100%'}"
//               [disabled]="isSubcategoryDisabled"
//               class="field-input uniform-input">
//             </p-dropdown>
//             <div class="error-container">
//               @if (!isSubcategoryDisabled && productForm.get('subcategory_id')?.invalid && productForm.get('subcategory_id')?.touched) {
//                 <small class="error-message">Subcategory is required.</small>
//               }
//             </div>
//           </div>
//         </div>
//       </div>
      
//       <!-- SECTION: Main Product Image -->
//       <div class="section">
//         <h3 class="section-title">Main Product Image</h3>
//         <p class="section-description">This will be the primary image displayed for the product</p>
        
//         <div class="form-field">
//           <label class="field-label">Main Image *</label>
//           <app-image-upload 
//             [initialImages]="mainImageInitial"
//             [singleImageMode]="true"
//             [id]="'main'"
//             (imagesChanged)="onMainImageChanged($event)"
//             class="uniform-input">
//           </app-image-upload>
//           <div class="error-container">
//             @if (!state.mainImage && !state.mainImageFile && productForm.touched) {
//               <small class="error-message">Main product image is required.</small>
//             }
//           </div>
//         </div>
//       </div>

//       <!-- SECTION: Additional Product Images -->
//       <div class="section">
//         <h3 class="section-title">Additional Product Images</h3>
//         <p class="section-description">Upload more images to showcase the product from different angles</p>
        
//         <div class="form-field">
//           <label class="field-label">Additional Images</label>
//           <app-image-upload 
//             [initialImages]="imagesInitial"
//             [singleImageMode]="false"
//             [id]="'add'"
//             (imagesChanged)="onImagesChanged($event)"
//             class="uniform-input">
//           </app-image-upload>
//           <div class="error-container">
//             <small class="helper-text">You can upload up to 5 additional images</small>
//           </div>
//         </div>
//       </div>
      
//       <!-- SECTION: Pricing -->
//       <!-- SECTION: Pricing -->
//       <div class="section">
//         <h3 class="section-title">Pricing</h3>
        
//         <div class="pricing-toggle">
//           <p-inputSwitch [trueValue]="'choices'" [falseValue]="'standard'" formControlName="pricing_type" class=""></p-inputSwitch>
//           <label class="toggle-label">{{ productForm.get('pricing_type')?.value === 'choices' ? 'Choices Price' : 'Standard Price' }}</label>
//         </div>
        
//         <!-- Standard Pricing -->
//         @if (productForm.get('pricing_type')?.value === 'standard') {
//           <div class="form-row">
//             <div class="form-field">
//               <label class="field-label">Price *</label>
//               <input 
//                 type="number" 
//                 pInputText 
//                 formControlName="price" 
//                 class="field-input uniform-input" 
//                 placeholder="100.00"
//                 step="0.01" />
//               <div class="error-container">
//                 @if (productForm.get('price')?.invalid && productForm.get('price')?.touched) {
//                   @if (productForm.get('price')?.errors?.['required']) {
//                     <small class="error-message">Price is required.</small>
//                   } @else if (productForm.get('price')?.errors?.['min']) {
//                     <small class="error-message">Price cannot be less than 0.</small>
//                   }
//                 }
//               </div>
//             </div>
            
//             <div class="form-field">
//               <label class="field-label">Sale Percentage</label>
//               <p-inputNumber 
//                 [style]="{'width': '100%'}"
//                 formControlName="sale_price"
//                 suffix="%"
//                 [min]="0"
//                 [max]="100"
//                 class="field-input uniform-input">
//               </p-inputNumber>
//               <div class="error-container">
//                 @if (productForm.get('sale_price')?.invalid && productForm.get('sale_price')?.touched) {
//                   @if (productForm.get('sale_price')?.errors?.['min']) {
//                     <small class="error-message">Sale percentage cannot be less than 0.</small>
//                   } @else if (productForm.get('sale_price')?.errors?.['max']) {
//                     <small class="error-message">Sale percentage cannot be greater than 100.</small>
//                   }
//                 }
//               </div>
//             </div>
            
//             <div class="form-field cursor-not-allowed">
//               <label class="field-label">Price After Sale</label>
//               <input 
//                 type="text" 
//                 pInputText 
//                 formControlName="price_after_sale"
//                 class="field-input uniform-input"
//                 readonly />
//               <div class="error-container"></div>
//             </div>
//           </div>
//         } @else {
//           <!-- Choice-Based Pricing -->
//           <div formArrayName="choices" class="choices-container">
//             @if (choicesArray.length < 2 && productForm.get('pricing_type')?.value === 'choices') {
//               <div class="error-container">
//                 <small class="error-message">At least two choices are required.</small>
//               </div>
//             }
//             @for (choice of choicesArray.controls; let i = $index;  track choice) {
//               <div [formGroupName]="i" class="choice-item">
//                 <div class="form-row">
//                   <div class="form-field">
//                     <label class="field-label">English Name *</label>
//                     <input type="text" pInputText formControlName="en_name" class="field-input uniform-input" />
//                     <div class="error-container">
//                       @if (choice.get('en_name')?.invalid && choice.get('en_name')?.touched) {
//                         <small class="error-message">English Name is required.</small>
//                       }
//                     </div>
//                   </div>
                  
//                   <div class="form-field">
//                     <label class="field-label">Arabic Name *</label>
//                     <input type="text" pInputText formControlName="ar_name" class="field-input uniform-input" dir="rtl" />
//                     <div class="error-container">
//                       @if (choice.get('ar_name')?.invalid && choice.get('ar_name')?.touched) {
//                         <small class="error-message">Arabic Name is required.</small>
//                       }
//                     </div>
//                   </div>
                  
//                   <div class="form-field">
//                     <label class="field-label">Price *</label>
//                     <input 
//                       type="number" 
//                       pInputText 
//                       formControlName="cuurent_value" 
//                       class="field-input uniform-input"
//                       placeholder="100.00"
//                       step="0.01" />
//                     <div class="error-container">
//                       @if (choice.get('cuurent_value')?.invalid && choice.get('cuurent_value')?.touched) {
//                         @if (choice.get('cuurent_value')?.errors?.['required']) {
//                           <small class="error-message">Price is required.</small>
//                         } @else if (choice.get('cuurent_value')?.errors?.['min']) {
//                           <small class="error-message">Price cannot be less than 0.</small>
//                         }
//                       }
//                     </div>
//                   </div>
//                 </div>
                
//                 <div class="choice-actions">
//                   <div class="choice-status">
//                     <p-inputSwitch formControlName="active_status" class="uniform-input"></p-inputSwitch>
//                     <label class="toggle-label">{{ choice.get('active_status')?.value ? 'Active' : 'Not Active' }}</label>
//                   </div>
//                   <button pButton icon="pi pi-trash" class="p-button-danger p-button-sm uniform-button" type="button" (click)="removeChoice(i)"></button>
//                 </div>
//               </div>
//             }
            
//             <button pButton label="Add Choice" icon="pi pi-plus" class="p-button-text add-choice-button uniform-button" type="button" (click)="addChoice()"></button>
//           </div>
//         }
//       </div>
      
      
//       <!-- SECTION: Status -->
//       <div class="section">
//         <h3 class="section-title">Status</h3>
        
//         <div class="status-toggles">
//           <div class="status-toggle">
//             <p-inputSwitch formControlName="active_status" class="uniform-input"></p-inputSwitch>
//             <label class="toggle-label">{{ productForm.get('active_status')?.value ? 'Active' : 'Not Active' }}</label>
//           </div>
          
//           <div class="status-toggle">
//             <p-inputSwitch formControlName="stock_status" class="uniform-input"></p-inputSwitch>
//             <label class="toggle-label">{{ productForm.get('stock_status')?.value ? 'In Stock' : 'Out of Stock' }}</label>
//           </div>
          
//           <div class="status-toggle">
//             <p-inputSwitch formControlName="featured" class="uniform-input"></p-inputSwitch>
//             <label class="toggle-label">{{ productForm.get('featured')?.value ? 'Featured' : 'Not Featured' }}</label>
//           </div>
//         </div>
//       </div>
      
//       <!-- Form Actions -->
//       <div class="form-actions">
//         <button pButton label="Cancel" icon="pi pi-times" class="p-button-text uniform-button" type="button" [routerLink]="['/dashboard/menu/products']"></button>
//         <button pButton label="Update" icon="pi pi-check" class="p-button-success uniform-button" type="submit"></button>
//       </div>
//     </form>
    
//     <!-- Display Submitted Data (for development purposes) -->
//     @if (submittedData) {
//       <div class="submitted-data">
//         <h3 class="submitted-data-title">Submitted Data</h3>
//         <pre class="submitted-data-content">{{ submittedData | json }}</pre>
//       </div>
//     }
//   </div>
// </div>

// <!-- Toast for notifications -->
// <p-toast></p-toast>

// <!-- Ngx-Spinner -->
// <ngx-spinner
//   name="actionsLoader"
//   bdColor="rgba(0, 0, 0, 0.8)"
//   size="medium"
//   color="#fff"
//   type="square-spin"
//   [fullScreen]="true">
//   <p style="color: white; font-size: 16px;">Loading...</p>
// </ngx-spinner>